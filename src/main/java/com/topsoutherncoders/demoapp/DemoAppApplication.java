package com.topsoutherncoders.demoapp;

import com.vaadin.flow.component.applayout.AppLayout;
import com.vaadin.flow.component.applayout.DrawerToggle;
import com.vaadin.flow.component.datepicker.DatePicker;
import com.vaadin.flow.component.html.H1;
import com.vaadin.flow.component.html.H3;
import com.vaadin.flow.component.html.Paragraph;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.component.sidenav.SideNav;
import com.vaadin.flow.component.sidenav.SideNavItem;
import com.vaadin.flow.router.Route;
import com.vaadin.flow.router.RouterLayout;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.vaadin.firitin.appframework.MainLayout;


@SpringBootApplication
public class DemoAppApplication {
	// Start with these two views, first without layout parameter

	@Route(value = "", layout = AppLayoutView.class)
	public static class MainView extends VerticalLayout {
		public MainView() {
			add(
					new H1("This is the your main view.")
					);
		}
	}
	@Route(value = "anotherview", layout = AppLayoutView.class)
	public static class AnotherView extends VerticalLayout {
		public AnotherView() {
			add(
					new H1("This is another of your views")
					);
		}
	}

	// Then drop in something like this to briefly explain the concept of the router layout
	public static class RouterLayoutView extends VerticalLayout implements RouterLayout {
		public RouterLayoutView() {
			add("This is a header for all views using this layout");
		}
	}

	// Then drop in AppLayout component we have in our core set
	// This is slightly simplified version of AppLayout example in our docs
	public static class AppLayoutView extends AppLayout {
		public AppLayoutView () {
			DrawerToggle toggle = new DrawerToggle();
			H3 title = new H3("MyApp");
			addToNavbar(toggle, title);

			SideNav nav = new SideNav();
			nav.addItem(new SideNavItem("Main", MainView.class),
					new SideNavItem("Another", AnotherView.class));
			addToDrawer(nav);
		}
	}

	// If some "stock solution" is enough, drop in some community add-on to avoid boilerplate code
	// Viritin MainLayout uses the standard AppLayout but automatically
	// generates the menu of available Route annotations, configurable with annotations
	public static class ChromeWithAutogeneratedMenu extends MainLayout {
		@Override
		protected String getDrawerHeader() {
			return null;
		}
	}

	public static void main(String[] args) {
		SpringApplication.run(DemoAppApplication.class, args);
	}
}
